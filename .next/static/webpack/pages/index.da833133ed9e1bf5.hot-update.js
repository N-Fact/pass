"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./public/scripts/merkleTree.js":
/*!**************************************!*\
  !*** ./public/scripts/merkleTree.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getProof\": function() { return /* binding */ getProof; }\n/* harmony export */ });\nvar MerkleTree = (__webpack_require__(/*! merkletreejs */ \"./node_modules/merkletreejs/dist/index.js\").MerkleTree);\nvar keccak256 = __webpack_require__(/*! keccak256 */ \"./node_modules/keccak256/dist/keccak256.js\");\nvar ethers = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\nvar Silverquantitys = {\n    \"0x839b9679D8619D34d4B1E250Ac281b356740e164\": 2,\n    \"0x4f18Ff8A4982207E3703Fd7947Fada315f43A793\": 3\n};\nvar Goldenquantitys = {\n    \"0xAa5ccD7e94a6D5717A5C4AA34496E9e02484c9f0\": 4,\n    \"0xD12Ab18087Fa3472cdb07045b0D13e2bae391bC6\": 5,\n    \"0xC43b5de6f53D04b8A8Ebe722Ab8A6F9D3C9c66b2\": 3,\n    \"0xe229dA7e40c10F6838e738Fc5660c73caB0884aA\": 4,\n    \"0xbdFeCb4ce734C0A11DAB22a2289b307FD7d18482\": 5\n};\nvar getProof = function getProof(whitelistAddress, _address, isGold, isSilver) {\n    var quantity;\n    var leafNodes;\n    var encodePacked;\n    if (isGold && !isSilver) {\n        leafNodes = whitelistAddress.map(function(addr) {\n            return keccak256(ethers.utils.solidityPack([\n                \"uint256\",\n                \"address\"\n            ], [\n                Goldenquantitys[addr],\n                addr\n            ]));\n        });\n    } else if (!isGold && isSilver) {\n        leafNodes = whitelistAddress.map(function(addr) {\n            return keccak256(ethers.utils.solidityPack([\n                \"uint256\",\n                \"address\"\n            ], [\n                Silverquantitys[addr],\n                addr\n            ]));\n        });\n    }\n    var merkleTree = new MerkleTree(leafNodes, keccak256, {\n        sortPairs: true\n    });\n    var rootHash = merkleTree.getRoot();\n    console.log(merkleTree.toString());\n    try {\n        if (Goldenquantitys[_address]) {\n            quantity = Goldenquantitys[_address];\n            encodePacked = ethers.utils.solidityPack([\n                \"uint256\",\n                \"address\"\n            ], [\n                Goldenquantitys[_address],\n                _address\n            ]);\n        } else if (Silverquantitys[_address]) {\n            quantity = Silverquantitys[_address];\n            encodePacked = ethers.utils.solidityPack([\n                \"uint256\",\n                \"address\"\n            ], [\n                Silverquantitys[_address],\n                _address\n            ]);\n        }\n        var claimingAddress = keccak256(encodePacked);\n        var hexProof = merkleTree.getHexProof(claimingAddress);\n        var address_verify = merkleTree.verify(hexProof, claimingAddress, rootHash);\n        return {\n            proof: hexProof,\n            verify: address_verify,\n            allowance: quantity\n        };\n    } catch (error) {\n        return {\n            proof: [],\n            verify: false,\n            allowance: 0\n        };\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVUsQ0FBQ1csTUFBTSxDQUFDSCxRQUFRLEVBQUNELGVBQWUsRUFBQ0wsUUFBUSxDQUFDO1FBQzNFLE9BQU87WUFDSFUsS0FBSyxFQUFDSixRQUFRO1lBQ2RHLE1BQU0sRUFBQ0QsY0FBYztZQUNyQkcsU0FBUyxFQUFDcEIsUUFBUTtTQUNyQjtLQUNKLENBQUMsT0FBT3FCLEtBQUssRUFBRTtRQUNaLE9BQU87WUFDSEYsS0FBSyxFQUFDLEVBQUU7WUFDUkQsTUFBTSxFQUFDLEtBQUs7WUFDWkUsU0FBUyxFQUFDLENBQUM7U0FDZDtLQUNKO0NBSUoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcHVibGljL3NjcmlwdHMvbWVya2xlVHJlZS5qcz9hMjRlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgTWVya2xlVHJlZSB9ID0gcmVxdWlyZSgnbWVya2xldHJlZWpzJylcclxuY29uc3Qga2VjY2FrMjU2ID0gcmVxdWlyZShcImtlY2NhazI1NlwiKTtcclxuY29uc3QgZXRoZXJzID0gcmVxdWlyZShcImV0aGVyc1wiKTtcclxuXHJcblxyXG52YXIgU2lsdmVycXVhbnRpdHlzID17XHJcbiAgICBcIjB4ODM5Yjk2NzlEODYxOUQzNGQ0QjFFMjUwQWMyODFiMzU2NzQwZTE2NFwiOjIsXHJcbiAgICBcIjB4NGYxOEZmOEE0OTgyMjA3RTM3MDNGZDc5NDdGYWRhMzE1ZjQzQTc5M1wiOjNcclxufVxyXG52YXIgR29sZGVucXVhbnRpdHlzID17XHJcbiAgICBcIjB4QWE1Y2NEN2U5NGE2RDU3MTdBNUM0QUEzNDQ5NkU5ZTAyNDg0YzlmMFwiOjQsXHJcbiAgICBcIjB4RDEyQWIxODA4N0ZhMzQ3MmNkYjA3MDQ1YjBEMTNlMmJhZTM5MWJDNlwiOjUsXHJcbiAgICBcIjB4QzQzYjVkZTZmNTNEMDRiOEE4RWJlNzIyQWI4QTZGOUQzQzljNjZiMlwiOjMsXHJcbiAgICBcIjB4ZTIyOWRBN2U0MGMxMEY2ODM4ZTczOEZjNTY2MGM3M2NhQjA4ODRhQVwiOjQsXHJcbiAgICBcIjB4YmRGZUNiNGNlNzM0QzBBMTFEQUIyMmEyMjg5YjMwN0ZEN2QxODQ4MlwiOjVcclxufVxyXG5cclxuXHJcbmV4cG9ydCBjb25zdCBnZXRQcm9vZiA9ZnVuY3Rpb24gZ2V0UHJvb2YgICh3aGl0ZWxpc3RBZGRyZXNzLF9hZGRyZXNzLGlzR29sZCxpc1NpbHZlcikgIHtcclxuXHJcbiAgICB2YXIgcXVhbnRpdHlcclxuICAgIHZhciBsZWFmTm9kZXNcclxuICAgIHZhciBlbmNvZGVQYWNrZWRcclxuICAgIFxyXG4gICAgaWYoaXNHb2xkICYmICFpc1NpbHZlcil7XHJcbiAgICAgICAgIGxlYWZOb2RlcyA9IHdoaXRlbGlzdEFkZHJlc3MubWFwKGFkZHIgPT4ga2VjY2FrMjU2KGV0aGVycy51dGlscy5zb2xpZGl0eVBhY2soWyAndWludDI1NicsJ2FkZHJlc3MnXSwgW0dvbGRlbnF1YW50aXR5c1thZGRyXSxhZGRyXSkpKTtcclxuXHJcbiAgICB9ZWxzZSBpZighaXNHb2xkICYmIGlzU2lsdmVyKXtcclxuICAgICAgICAgbGVhZk5vZGVzID0gd2hpdGVsaXN0QWRkcmVzcy5tYXAoYWRkciA9PiBrZWNjYWsyNTYoZXRoZXJzLnV0aWxzLnNvbGlkaXR5UGFjayhbICd1aW50MjU2JywnYWRkcmVzcyddLCBbU2lsdmVycXVhbnRpdHlzW2FkZHJdLGFkZHJdKSkpO1xyXG5cclxuICAgIH1cclxuICAgIGNvbnN0IG1lcmtsZVRyZWUgPSBuZXcgTWVya2xlVHJlZShsZWFmTm9kZXMsa2VjY2FrMjU2LHtzb3J0UGFpcnM6IHRydWV9KTtcclxuICAgIGNvbnN0IHJvb3RIYXNoID0gbWVya2xlVHJlZS5nZXRSb290KCk7IFxyXG4gICAgY29uc29sZS5sb2cobWVya2xlVHJlZS50b1N0cmluZygpKVxyXG4gICAgXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGlmKEdvbGRlbnF1YW50aXR5c1tfYWRkcmVzc10pe1xyXG4gICAgICAgICAgICBxdWFudGl0eSA9IEdvbGRlbnF1YW50aXR5c1tfYWRkcmVzc11cclxuICAgICAgICAgICAgZW5jb2RlUGFja2VkID0gZXRoZXJzLnV0aWxzLnNvbGlkaXR5UGFjayhbICd1aW50MjU2JywnYWRkcmVzcyddLCBbR29sZGVucXVhbnRpdHlzW19hZGRyZXNzXSxfYWRkcmVzc10pO1xyXG4gICAgICAgIH1lbHNlIGlmKFNpbHZlcnF1YW50aXR5c1tfYWRkcmVzc10pe1xyXG4gICAgICAgICAgICBxdWFudGl0eSA9IFNpbHZlcnF1YW50aXR5c1tfYWRkcmVzc11cclxuICAgICAgICAgICAgZW5jb2RlUGFja2VkID0gZXRoZXJzLnV0aWxzLnNvbGlkaXR5UGFjayhbICd1aW50MjU2JywnYWRkcmVzcyddLCBbU2lsdmVycXVhbnRpdHlzW19hZGRyZXNzXSxfYWRkcmVzc10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY2xhaW1pbmdBZGRyZXNzID0ga2VjY2FrMjU2KGVuY29kZVBhY2tlZCk7XHJcbiAgICBcclxuICAgICAgICBjb25zdCBoZXhQcm9vZiA9IG1lcmtsZVRyZWUuZ2V0SGV4UHJvb2YoY2xhaW1pbmdBZGRyZXNzKTtcclxuICAgICAgICBjb25zdCBhZGRyZXNzX3ZlcmlmeSA9IG1lcmtsZVRyZWUudmVyaWZ5KGhleFByb29mLGNsYWltaW5nQWRkcmVzcyxyb290SGFzaClcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICBwcm9vZjpoZXhQcm9vZixcclxuICAgICAgICAgICAgdmVyaWZ5OmFkZHJlc3NfdmVyaWZ5LFxyXG4gICAgICAgICAgICBhbGxvd2FuY2U6cXVhbnRpdHlcclxuICAgICAgICB9XHJcbiAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHByb29mOltdLFxyXG4gICAgICAgICAgICB2ZXJpZnk6ZmFsc2UsXHJcbiAgICAgICAgICAgIGFsbG93YW5jZTowXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gXHJcblxyXG4gICBcclxufVxyXG5cclxuXHJcbiJdLCJuYW1lcyI6WyJNZXJrbGVUcmVlIiwicmVxdWlyZSIsImtlY2NhazI1NiIsImV0aGVycyIsIlNpbHZlcnF1YW50aXR5cyIsIkdvbGRlbnF1YW50aXR5cyIsImdldFByb29mIiwid2hpdGVsaXN0QWRkcmVzcyIsIl9hZGRyZXNzIiwiaXNHb2xkIiwiaXNTaWx2ZXIiLCJxdWFudGl0eSIsImxlYWZOb2RlcyIsImVuY29kZVBhY2tlZCIsIm1hcCIsImFkZHIiLCJ1dGlscyIsInNvbGlkaXR5UGFjayIsIm1lcmtsZVRyZWUiLCJzb3J0UGFpcnMiLCJyb290SGFzaCIsImdldFJvb3QiLCJjb25zb2xlIiwibG9nIiwidG9TdHJpbmciLCJjbGFpbWluZ0FkZHJlc3MiLCJoZXhQcm9vZiIsImdldEhleFByb29mIiwiYWRkcmVzc192ZXJpZnkiLCJ2ZXJpZnkiLCJwcm9vZiIsImFsbG93YW5jZSIsImVycm9yIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./public/scripts/merkleTree.js\n");

/***/ })

});